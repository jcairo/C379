Jonathan Cairo
1018148
jcairo
LEC A1
Paul Lu
LAB D01
TA: Soham Sinha

Description:
The intention of procnanny is to monitor a list of user specified processes for a user specified amount of time.
The program reads the user specifications in the nanny.config file.
It then forks a child process for each user specified processes that exists.
These children sleep for the user specified period of time.
Upon being awakened they check to see if the process they are set to monitor still exists.
If so they kill the process and report it via a pipe to the parent.
After this report the child processes wait for further instructions from the parent.
All of this is orchestrated by a server process which sends commands via a socket to all connected clients.
The program handles SIGINT by killing all child processes.
The program handles SIGHUP by rereading the config file.
The program is then shut down.

Relevant Commands:
Type make at the command line to build procnanny.
Type make clean to clear out .o and the procnanny executable.
Type ./procnanny nanny.config to execute the program
Ensure the unix env variable PROCNANNYLOGS and PROCNANNYSERVERINFO are set to the location of the logfiles.
You can send a quit signal to the parent process using kill SIGINT process_id.
You can send a reread config request to the parent process using kill SIGHUP process_id.

Sources:
config_reader.c file reading code taken from http://stackoverflow.com/questions/3501338/c-read-file-line-by-line
process_manader.c process status code take from http://stackoverflow.com/questions/5460702/check-running-processes-in-c
http://www.albany.edu/~csi402/pdfs/handout_15.2.pdf

